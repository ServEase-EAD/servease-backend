events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml+rss;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;

    # Upstream services
    upstream auth_service {
        server authentication-service:8001;
    }

    upstream customer_service {
        server customer-service:8002;
    }

    upstream employee_service {
        server employee-service:8003;
    }

    upstream vehicle_service {
        server vehicleandproject-service:8004;
    }

    upstream appointment_service {
        server appointment-service:8005;
    }

    upstream notification_service {
        server notification-service:8006;
    }

    upstream chatbot_service {
        server chatbot-service:8008;
    }

    # Main server configuration
    server {
        listen 80;
        server_name localhost;

        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # API v1 Routes
        # Authentication Service Routes
        location /api/v1/auth/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://auth_service/api/v1/auth/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;
            proxy_pass_header Authorization;
        }

        # Customer Service Routes
        location /api/v1/customers/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://customer_service/api/v1/customers/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;
            proxy_pass_header Authorization;
        }

        # Employee Service Routes
        location /api/v1/employees/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://employee_service/api/v1/employees/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Vehicle and Project Service Routes
        location /api/v1/vehicles/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://vehicle_service/api/v1/vehicles/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/v1/projects/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://vehicle_service/api/v1/projects/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Appointment Service Routes
        location /api/v1/appointments/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://appointment_service/api/v1/appointments/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Notification Service Routes
        location /api/v1/notifications/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://notification_service/api/v1/notifications/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Chatbot Service Routes
        location /api/v1/chatbot/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://chatbot_service/api/v1/chatbot/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # WebSocket support for real-time features
        location /ws/ {
            proxy_pass http://notification_service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Static files
        location /static/ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Default fallback
        location / {
            return 404 "Service not found";
            add_header Content-Type text/plain;
        }
    }
}