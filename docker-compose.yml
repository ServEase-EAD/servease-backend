networks:
  servease-network:
    driver: bridge

volumes:
  redis_data:
  pgadmin_data:

services:
  # Cache Service
  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    networks:
      - servease-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  pgadmin:
    image: dpage/pgadmin4:latest
    env_file:
      - .env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT}:80"
    networks:
      - servease-network
    restart: unless-stopped

  # Microservices
  authentication-service:
    build: ./authentication-service
    env_file:
      - .env
    ports:
      - "8001:8001"
    environment:
      - DB_HOST=${DB_HOST}
      - DB_NAME=${AUTH_DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - SERVICE_NAME=authentication-service
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - servease-network
    volumes:
      - ./authentication-service:/app
    restart: unless-stopped

  customer-service:
    build: ./customer-service
    env_file:
      - .env
    ports:
      - "8002:8002"
    environment:
      - DB_HOST=${DB_HOST}
      - DB_NAME=${CUSTOMER_DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - SERVICE_NAME=customer-service
      - AUTH_SERVICE_URL=${AUTH_SERVICE_URL}
    depends_on:
      redis:
        condition: service_healthy
      authentication-service:
        condition: service_started
    networks:
      - servease-network
    volumes:
      - ./customer-service:/app
    restart: unless-stopped

  employee-service:
    build: ./employee-service
    env_file:
      - .env
    ports:
      - "8003:8003"
    environment:
      - DB_HOST=${DB_HOST}
      - DB_NAME=${EMPLOYEE_DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - SERVICE_NAME=employee-service
      - AUTH_SERVICE_URL=${AUTH_SERVICE_URL}
    depends_on:
      redis:
        condition: service_healthy
      authentication-service:
        condition: service_started
    networks:
      - servease-network
    volumes:
      - ./employee-service:/app
    restart: unless-stopped

  vehicleandproject-service:
    build: ./vehicleandproject-service
    env_file:
      - .env
    ports:
      - "8004:8004"
    environment:
      - DB_HOST=${DB_HOST}
      - DB_NAME=${VEHICLE_DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - SERVICE_NAME=vehicleandproject-service
      - AUTH_SERVICE_URL=${AUTH_SERVICE_URL}
    depends_on:
      redis:
        condition: service_healthy
      authentication-service:
        condition: service_started
    networks:
      - servease-network
    volumes:
      - ./vehicleandproject-service:/app
    restart: unless-stopped

  appointment-service:
    build: ./appointment-service
    env_file:
      - .env
    ports:
      - "8005:8005"
    environment:
      - DB_HOST=${DB_HOST}
      - DB_NAME=${APPOINTMENT_DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - SERVICE_NAME=appointment-service
      - AUTH_SERVICE_URL=${AUTH_SERVICE_URL}
      - CUSTOMER_SERVICE_URL=${CUSTOMER_SERVICE_URL}
      - EMPLOYEE_SERVICE_URL=${EMPLOYEE_SERVICE_URL}
    depends_on:
      redis:
        condition: service_healthy
      authentication-service:
        condition: service_started
      customer-service:
        condition: service_started
      employee-service:
        condition: service_started
    networks:
      - servease-network
    volumes:
      - ./appointment-service:/app
    restart: unless-stopped

  notification-service:
    build: ./notification-service
    env_file:
      - .env
    ports:
      - "8006:8006"
    environment:
      - DB_HOST=${DB_HOST}
      - DB_NAME=${NOTIFICATION_DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - SERVICE_NAME=notification-service
      - AUTH_SERVICE_URL=${AUTH_SERVICE_URL}
    depends_on:
      redis:
        condition: service_healthy
      authentication-service:
        condition: service_started
    networks:
      - servease-network
    volumes:
      - ./notification-service:/app
    restart: unless-stopped

  chatbot-service:
    build: ./chatbot-service
    env_file:
      - .env
    ports:
      - "8008:8008"
    environment:
      - DB_HOST=${DB_HOST}
      - DB_NAME=${CHATBOT_DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - SERVICE_NAME=chatbot-service
      - AUTH_SERVICE_URL=${AUTH_SERVICE_URL}
    depends_on:
      redis:
        condition: service_healthy
      authentication-service:
        condition: service_started
    networks:
      - servease-network
    volumes:
      - ./chatbot-service:/app
    restart: unless-stopped

  # API Gateway
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites-available:/etc/nginx/sites-available
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - authentication-service
      - customer-service
      - employee-service
      - vehicleandproject-service
      - appointment-service
      - notification-service
      - chatbot-service
    networks:
      - servease-network
    restart: unless-stopped
